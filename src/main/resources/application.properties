# DataSource settings: set here your own configurations for the database connection.
# In URL part use your own MySQL database destination i.e. 192.168.0.102
# In this example we have "country" as database name and "root" as username and password.
spring.datasource.url = jdbc:mysql://192.168.0.102:3306/country
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
# spring.datasource.testWhileIdle = true
# spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = validate

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# To change the embedded Tomcat initialized port (8080), update this properties
server.port=9000